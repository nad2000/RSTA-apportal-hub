# Generated by Django 3.0.11 on 2020-12-01 23:02

import common.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import portal.models
import simple_history.models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('portal', '0031_auto_20201114_0047'),
    ]

    operations = [
        migrations.CreateModel(
            name='Evaluation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Overall Comment')),
                ('total_score', models.PositiveIntegerField(default=0, verbose_name='Total Score')),
                ('state', portal.models.StateField(blank=True, choices=[(None, None), ('new', 'new'), ('draft', 'draft'), ('submitted', 'submitted'), ('accepted', 'accepted')], default='new', max_length=100, no_check_for_status=True, null=True)),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evaluations', to='portal.Application')),
                ('panellist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evaluations', to='portal.Panellist')),
            ],
            options={
                'db_table': 'evaluation',
            },
            bases=(portal.models.EvaluationMixin, common.models.HelperMixin, models.Model),
        ),
        migrations.AddField(
            model_name='criterion',
            name='max_score',
            field=models.PositiveSmallIntegerField(default=10),
        ),
        migrations.AddField(
            model_name='criterion',
            name='min_score',
            field=models.PositiveSmallIntegerField(default=0),
        ),
        migrations.AddField(
            model_name='historicalcriterion',
            name='max_score',
            field=models.PositiveSmallIntegerField(default=10),
        ),
        migrations.AddField(
            model_name='historicalcriterion',
            name='min_score',
            field=models.PositiveSmallIntegerField(default=0),
        ),
        migrations.AlterField(
            model_name='criterion',
            name='scale',
            field=models.SmallIntegerField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='historicalcriterion',
            name='scale',
            field=models.SmallIntegerField(blank=True, null=True),
        ),
        migrations.CreateModel(
            name='Score',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('value', models.PositiveIntegerField(default=0, verbose_name='Score')),
                ('comment', models.TextField(blank=True, null=True)),
                ('criterion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scores', to='portal.Criterion')),
                ('evaluation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portal.Evaluation')),
            ],
            options={
                'db_table': 'score',
            },
            bases=(common.models.HelperMixin, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalEvaluation',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('updated_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Overall Comment')),
                ('total_score', models.PositiveIntegerField(default=0, verbose_name='Total Score')),
                ('state', portal.models.StateField(blank=True, choices=[(None, None), ('new', 'new'), ('draft', 'draft'), ('submitted', 'submitted'), ('accepted', 'accepted')], default='new', max_length=100, no_check_for_status=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('application', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='portal.Application')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('panellist', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='portal.Panellist')),
            ],
            options={
                'verbose_name': 'historical evaluation',
                'db_table': 'evaluation_history',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, portal.models.EvaluationMixin, common.models.HelperMixin, models.Model),
        ),
        migrations.AddField(
            model_name='evaluation',
            name='scores',
            field=models.ManyToManyField(blank=True, through='portal.Score', to='portal.Criterion'),
        ),
    ]
